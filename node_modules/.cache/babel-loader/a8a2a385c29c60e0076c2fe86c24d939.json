{"remainingRequest":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/babel-loader/lib/index.js!/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/eslint-loader/index.js??ref--13-0!/home/sashank/Documents/FYP/coffee-supply-chain/front-end/src/assets/Batchlist.js","dependencies":[{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/src/assets/Batchlist.js","mtime":1592163766832},{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1592160843162},{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/babel-loader/lib/index.js","mtime":1592160843138},{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/eslint-loader/index.js","mtime":1592160843326}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIik7Cgp2YXIgX2FzeW5jVG9HZW5lcmF0b3IgPSByZXF1aXJlKCIvaG9tZS9zYXNoYW5rL0RvY3VtZW50cy9GWVAvY29mZmVlLXN1cHBseS1jaGFpbi9mcm9udC1lbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciIpOwoKdmFyIGZhYnJpY0NsaWVudCA9IHJlcXVpcmUoJy4vZmFicmljQ2xpZW50LmpzJyk7CgpmdW5jdGlvbiBmZXRjaExpc3QoKSB7CiAgcmV0dXJuIF9mZXRjaExpc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyB2YXIgZGF0YTsKLy8gZmFicmljQ2xpZW50LnF1ZXJ5QmF0Y2hMaXN0KCkudGhlbihyZXNwb25zZSA9PiBkYXRhUHJvY2VzcyhyZXNwb25zZSkpCi8vICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7Ci8vICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7Ci8vICAgfSk7CgoKZnVuY3Rpb24gX2ZldGNoTGlzdCgpIHsKICBfZmV0Y2hMaXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIGJhdGNoTGlzdCwgcHJvY2Vzc2VkTGlzdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBmYWJyaWNDbGllbnQucXVlcnlCYXRjaExpc3QoKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGJhdGNoTGlzdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGJhdGNoTGlzdCk7CiAgICAgICAgICAgIHByb2Nlc3NlZExpc3QgPSBkYXRhUHJvY2VzcyhiYXRjaExpc3QpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBwcm9jZXNzZWRMaXN0KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZmV0Y2hMaXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGRhdGFQcm9jZXNzKGJhdGNoTGlzdCkgewogIHZhciB0ZW1wID0gYmF0Y2hMaXN0OwogIHZhciBkYXRhX2xpc3QgPSBbXTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0ZW1wLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgdGVtcDIgPSB0ZW1wW2ldOwoKICAgIGlmICh0ZW1wMi5zdGFnZSA9PT0gImN1bHRpdmF0aW9uIikgewogICAgICBkYXRhX2xpc3QucHVzaCh7CiAgICAgICAgQmF0Y2hJZDogdGVtcDIuaWQsCiAgICAgICAgQ3VsdGl2YXRpb25TdGFnZTogIlByb2Nlc3NpbmciLAogICAgICAgIEZhcm1JbnNwZWN0b3JTdGFnZTogIk5vdCBhdmFpbGFibGUiLAogICAgICAgIEhhcnZlc3RlclN0YWdlOiAiTm90IGF2YWlsYWJsZSIsCiAgICAgICAgRXhwb3J0ZXJTdGFnZTogIk5vdCBhdmFpbGFibGUiLAogICAgICAgIEltcG9ydGVyU3RhZ2U6ICJOb3QgYXZhaWxhYmxlIiwKICAgICAgICBQcm9jZXNzb3JTdGFnZTogIk5vdCBhdmFpbGFibGUiCiAgICAgIH0pOwogICAgfSBlbHNlIGlmICh0ZW1wMi5zdGFnZSA9PT0gImZhcm0taW5zcGVjdG9yIikgewogICAgICBkYXRhX2xpc3QucHVzaCh7CiAgICAgICAgQmF0Y2hJZDogdGVtcDIuaWQsCiAgICAgICAgQ3VsdGl2YXRpb25TdGFnZTogIkNvbXBsZXRlZCIsCiAgICAgICAgRmFybUluc3BlY3RvclN0YWdlOiAiUHJvY2Vzc2luZyIsCiAgICAgICAgSGFydmVzdGVyU3RhZ2U6ICJOb3QgYXZhaWxhYmxlIiwKICAgICAgICBFeHBvcnRlclN0YWdlOiAiTm90IGF2YWlsYWJsZSIsCiAgICAgICAgSW1wb3J0ZXJTdGFnZTogIk5vdCBhdmFpbGFibGUiLAogICAgICAgIFByb2Nlc3NvclN0YWdlOiAiTm90IGF2YWlsYWJsZSIKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKHRlbXAyLnN0YWdlID09PSAiaGFydmVzdGVyIikgewogICAgICBkYXRhX2xpc3QucHVzaCh7CiAgICAgICAgQmF0Y2hJZDogdGVtcDIuaWQsCiAgICAgICAgQ3VsdGl2YXRpb25TdGFnZTogIkNvbXBsZXRlZCIsCiAgICAgICAgRmFybUluc3BlY3RvclN0YWdlOiAiQ29tcGxldGVkIiwKICAgICAgICBIYXJ2ZXN0ZXJTdGFnZTogIlByb2Nlc3NpbmciLAogICAgICAgIEV4cG9ydGVyU3RhZ2U6ICJOb3QgYXZhaWxhYmxlIiwKICAgICAgICBJbXBvcnRlclN0YWdlOiAiTm90IGF2YWlsYWJsZSIsCiAgICAgICAgUHJvY2Vzc29yU3RhZ2U6ICJOb3QgYXZhaWxhYmxlIgogICAgICB9KTsKICAgIH0gZWxzZSBpZiAodGVtcDIuc3RhZ2UgPT09ICJleHBvcnRlciIpIHsKICAgICAgZGF0YV9saXN0LnB1c2goewogICAgICAgIEJhdGNoSWQ6IHRlbXAyLmlkLAogICAgICAgIEN1bHRpdmF0aW9uU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEZhcm1JbnNwZWN0b3JTdGFnZTogIkNvbXBsZXRlZCIsCiAgICAgICAgSGFydmVzdGVyU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEV4cG9ydGVyU3RhZ2U6ICJQcm9jZXNzaW5nIiwKICAgICAgICBJbXBvcnRlclN0YWdlOiAiTm90IGF2YWlsYWJsZSIsCiAgICAgICAgUHJvY2Vzc29yU3RhZ2U6ICJOb3QgYXZhaWxhYmxlIgogICAgICB9KTsKICAgIH0gZWxzZSBpZiAodGVtcDIuc3RhZ2UgPT09ICJpbXBvcnRlciIpIHsKICAgICAgZGF0YV9saXN0LnB1c2goewogICAgICAgIEJhdGNoSWQ6IHRlbXAyLmlkLAogICAgICAgIEN1bHRpdmF0aW9uU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEZhcm1JbnNwZWN0b3JTdGFnZTogIkNvbXBsZXRlZCIsCiAgICAgICAgSGFydmVzdGVyU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEV4cG9ydGVyU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEltcG9ydGVyU3RhZ2U6ICJQcm9jZXNzaW5nIiwKICAgICAgICBQcm9jZXNzb3JTdGFnZTogIk5vdCBhdmFpbGFibGUiCiAgICAgIH0pOwogICAgfSBlbHNlIGlmICh0ZW1wMi5zdGFnZSA9PT0gInByb2Nlc3NvciIpIHsKICAgICAgZGF0YV9saXN0LnB1c2goewogICAgICAgIEJhdGNoSWQ6IHRlbXAyLmlkLAogICAgICAgIEN1bHRpdmF0aW9uU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEZhcm1JbnNwZWN0b3JTdGFnZTogIkNvbXBsZXRlZCIsCiAgICAgICAgSGFydmVzdGVyU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEV4cG9ydGVyU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIEltcG9ydGVyU3RhZ2U6ICJDb21wbGV0ZWQiLAogICAgICAgIFByb2Nlc3NvclN0YWdlOiAiUHJvY2Vzc2luZyIKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gZGF0YV9saXN0Owp9Cgp2YXIgZGF0YV9saXN0ID0gZmV0Y2hMaXN0KCk7CmNvbnNvbGUubG9nKGRhdGFfbGlzdCk7IC8vIGV4cG9ydCBkZWZhdWx0IGRhdGFfbGlzdDs="},{"version":3,"sources":["/home/sashank/Documents/FYP/coffee-supply-chain/front-end/src/assets/Batchlist.js"],"names":["fabricClient","require","fetchList","queryBatchList","batchList","console","log","processedList","dataProcess","temp","data_list","i","length","temp2","stage","push","BatchId","id","CultivationStage","FarmInspectorStage","HarvesterStage","ExporterStage","ImporterStage","ProcessorStage"],"mappings":"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","sourcesContent":["const fabricClient = require('./fabricClient.js');\n\nasync function fetchList() {\n  const batchList = await fabricClient.queryBatchList();\n  console.log(batchList);\n  const processedList = dataProcess(batchList);\n  return processedList;\n}\n\n// var data;\n// fabricClient.queryBatchList().then(response => dataProcess(response))\n//   .then((response) => {\n//     console.log(response);\n//   });\n\nfunction dataProcess(batchList) {\n\n  let temp = batchList\n  let data_list = [];\n\n  for (let i = 0; i < temp.length; i++) {\n    let temp2 = temp[i];\n    if (temp2.stage === \"cultivation\") {\n      data_list.push({\n        BatchId: temp2.id,\n        CultivationStage: \"Processing\",\n        FarmInspectorStage: \"Not available\",\n        HarvesterStage: \"Not available\",\n        ExporterStage: \"Not available\",\n        ImporterStage: \"Not available\",\n        ProcessorStage: \"Not available\"\n      });\n\n    } else if (temp2.stage === \"farm-inspector\") {\n      data_list.push({\n        BatchId: temp2.id,\n        CultivationStage: \"Completed\",\n        FarmInspectorStage: \"Processing\",\n        HarvesterStage: \"Not available\",\n        ExporterStage: \"Not available\",\n        ImporterStage: \"Not available\",\n        ProcessorStage: \"Not available\"\n      });\n\n    } else if (temp2.stage === \"harvester\") {\n      data_list.push({\n        BatchId: temp2.id,\n        CultivationStage: \"Completed\",\n        FarmInspectorStage: \"Completed\",\n        HarvesterStage: \"Processing\",\n        ExporterStage: \"Not available\",\n        ImporterStage: \"Not available\",\n        ProcessorStage: \"Not available\"\n      });\n    } else if (temp2.stage === \"exporter\") {\n      data_list.push({\n        BatchId: temp2.id,\n        CultivationStage: \"Completed\",\n        FarmInspectorStage: \"Completed\",\n        HarvesterStage: \"Completed\",\n        ExporterStage: \"Processing\",\n        ImporterStage: \"Not available\",\n        ProcessorStage: \"Not available\"\n      });\n    } else if (temp2.stage === \"importer\") {\n      data_list.push({\n        BatchId: temp2.id,\n        CultivationStage: \"Completed\",\n        FarmInspectorStage: \"Completed\",\n        HarvesterStage: \"Completed\",\n        ExporterStage: \"Completed\",\n        ImporterStage: \"Processing\",\n        ProcessorStage: \"Not available\"\n      });\n    } else if (temp2.stage === \"processor\") {\n      data_list.push({\n        BatchId: temp2.id,\n        CultivationStage: \"Completed\",\n        FarmInspectorStage: \"Completed\",\n        HarvesterStage: \"Completed\",\n        ExporterStage: \"Completed\",\n        ImporterStage: \"Completed\",\n        ProcessorStage: \"Processing\"\n      });\n    }\n  }\n\n  return data_list;\n\n}\n\nlet data_list = fetchList();\nconsole.log(data_list);\n// export default data_list;\n"]}]}