{"remainingRequest":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/babel-loader/lib/index.js!/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/eslint-loader/index.js??ref--13-0!/home/sashank/Documents/FYP/coffee-supply-chain/front-end/src/assets/fabric-client/createClient.js","dependencies":[{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/src/assets/fabric-client/createClient.js","mtime":1592161232157},{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1592160843162},{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/babel-loader/lib/index.js","mtime":1592160843138},{"path":"/home/sashank/Documents/FYP/coffee-supply-chain/front-end/node_modules/eslint-loader/index.js","mtime":1592160843326}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4iKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpOwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIik7Cgp2YXIgX2FzeW5jVG9HZW5lcmF0b3IgPSByZXF1aXJlKCIvaG9tZS9zYXNoYW5rL0RvY3VtZW50cy9GWVAvY29mZmVlLXN1cHBseS1jaGFpbi9mcm9udC1lbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciIpOwoKdmFyIGZzID0gcmVxdWlyZSgnZnMnKTsKCnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ2ZhYnJpYy1uZXR3b3JrJyksCiAgICBGaWxlU3lzdGVtV2FsbGV0ID0gX3JlcXVpcmUuRmlsZVN5c3RlbVdhbGxldCwKICAgIFg1MDlXYWxsZXRNaXhpbiA9IF9yZXF1aXJlLlg1MDlXYWxsZXRNaXhpbjsKCnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpOwoKdmFyIG5ldHdvcmtQYXRoID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uLy4uLy4uL25ldHdvcmsnKTsKdmFyIHdhbGxldCA9IG5ldyBGaWxlU3lzdGVtV2FsbGV0KCcvd2FsbGV0Jyk7Cm1vZHVsZS5leHBvcnRzID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICB2YXIgY3JlZFBhdGgsIGNlcnQsIGtleSwgaWRlbnRpdHlMYWJlbCwgaWRlbnRpdHk7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICBjcmVkUGF0aCA9IHBhdGguam9pbihuZXR3b3JrUGF0aCwgJy9jcnlwdG8tY29uZmlnL3BlZXJPcmdhbml6YXRpb25zL2Zhcm1pbnNwZWN0b3Iuc3VwcGx5Y2hhaW4uY29tL3VzZXJzL0FkbWluQGZhcm1pbnNwZWN0b3Iuc3VwcGx5Y2hhaW4uY29tJyk7CiAgICAgICAgICBjZXJ0ID0gZnMucmVhZEZpbGVTeW5jKHBhdGguam9pbihjcmVkUGF0aCwgJy9tc3Avc2lnbmNlcnRzL0FkbWluQGZhcm1pbnNwZWN0b3Iuc3VwcGx5Y2hhaW4uY29tLWNlcnQucGVtJykpLnRvU3RyaW5nKCk7CiAgICAgICAgICBrZXkgPSBmcy5yZWFkRmlsZVN5bmMocGF0aC5qb2luKGNyZWRQYXRoLCAnL21zcC9rZXlzdG9yZS82NDMzODQyOGMwZDM0ZGYyNzUyY2Q2NjVhNzZjODJmNzY1M2VhOTc3NTU2MmJjMGVjM2I5NmYzOGQ0Zjc5MTY1X3NrJykpLnRvU3RyaW5nKCk7CiAgICAgICAgICBpZGVudGl0eUxhYmVsID0gJ0FkbWluQGZhcm1pbnNwZWN0b3Iuc3VwcGx5Y2hhaW4uY29tJzsKICAgICAgICAgIGlkZW50aXR5ID0gWDUwOVdhbGxldE1peGluLmNyZWF0ZUlkZW50aXR5KCdGYXJtSW5zcGVjdG9yTVNQJywgY2VydCwga2V5KTsKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgcmV0dXJuIHdhbGxldC5leGlzdHMoaWRlbnRpdHlMYWJlbCk7CgogICAgICAgIGNhc2UgODoKICAgICAgICAgIGlmIChfY29udGV4dC5zZW50KSB7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgcmV0dXJuIHdhbGxldC5pbXBvcnQoaWRlbnRpdHlMYWJlbCwgaWRlbnRpdHkpOwoKICAgICAgICBjYXNlIDExOgogICAgICAgICAgY29uc29sZS5sb2coIklkZW50aXR5IGNyZWF0ZWQgYW5kIGltcG9ydGVkIHRvIHdhbGxldCIpOwogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICBjb25zb2xlLmxvZygiSWRlbnRpdHkgY3JlYXRpb24gc2tpcHBlZCBhcyB0aGUgaWRlbnRpdHkgYWxyZWFkeSBleGlzdHMgaW4gdGhlIHdhbGxldCIpOwoKICAgICAgICBjYXNlIDE1OgogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIxOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMTc6CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTc7CiAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgY29uc29sZS5sb2coIkVycm9yIGFkZGluZyB0byB3YWxsZXQuICIuY29uY2F0KF9jb250ZXh0LnQwKSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MC5zdGFjayk7CgogICAgICAgIGNhc2UgMjE6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDE3XV0pOwp9KSk7"},{"version":3,"sources":["/home/sashank/Documents/FYP/coffee-supply-chain/front-end/src/assets/fabric-client/createClient.js"],"names":["fs","require","FileSystemWallet","X509WalletMixin","path","networkPath","resolve","__dirname","wallet","module","exports","credPath","join","cert","readFileSync","toString","key","identityLabel","identity","createIdentity","exists","import","console","log","stack"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;eAC8CA,OAAO,CAAC,gBAAD,C;IAA7CC,gB,YAAAA,gB;IAAkBC,e,YAAAA,e;;AAC1B,IAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMI,WAAW,GAAGD,IAAI,CAACE,OAAL,CAAaC,SAAb,EAAwB,qBAAxB,CAApB;AACA,IAAMC,MAAM,GAAG,IAAIN,gBAAJ,CAAqB,SAArB,CAAf;AAEAO,MAAM,CAACC,OAAP,wEAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,UAAAA,QAFG,GAEQP,IAAI,CAACQ,IAAL,CAAUP,WAAV,EAAuB,0GAAvB,CAFR;AAGHQ,UAAAA,IAHG,GAGIb,EAAE,CAACc,YAAH,CAAgBV,IAAI,CAACQ,IAAL,CAAUD,QAAV,EAAoB,6DAApB,CAAhB,EAAoGI,QAApG,EAHJ;AAIHC,UAAAA,GAJG,GAIGhB,EAAE,CAACc,YAAH,CAAgBV,IAAI,CAACQ,IAAL,CAAUD,QAAV,EAAoB,mFAApB,CAAhB,EAA0HI,QAA1H,EAJH;AAMHE,UAAAA,aANG,GAMa,qCANb;AAOHC,UAAAA,QAPG,GAOQf,eAAe,CAACgB,cAAhB,CAA+B,kBAA/B,EAAmDN,IAAnD,EAAyDG,GAAzD,CAPR;AAAA;AAAA,iBAQGR,MAAM,CAACY,MAAP,CAAcH,aAAd,CARH;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,iBASCT,MAAM,CAACa,MAAP,CAAcJ,aAAd,EAA6BC,QAA7B,CATD;;AAAA;AAULI,UAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AAVK;AAAA;;AAAA;AAYLD,UAAAA,OAAO,CAACC,GAAR,CAAY,wEAAZ;;AAZK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBTD,UAAAA,OAAO,CAACC,GAAR;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAMC,KAAlB;;AAjBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst { FileSystemWallet, X509WalletMixin } = require('fabric-network');\nconst path = require('path');\n\nconst networkPath = path.resolve(__dirname, '../../../../network');\nconst wallet = new FileSystemWallet('/wallet');\n\nmodule.exports = async () => {\n    try {\n        const credPath = path.join(networkPath, '/crypto-config/peerOrganizations/farminspector.supplychain.com/users/Admin@farminspector.supplychain.com');\n        const cert = fs.readFileSync(path.join(credPath, '/msp/signcerts/Admin@farminspector.supplychain.com-cert.pem')).toString();\n        const key = fs.readFileSync(path.join(credPath, '/msp/keystore/64338428c0d34df2752cd665a76c82f7653ea9775562bc0ec3b96f38d4f79165_sk')).toString();\n\n        const identityLabel = 'Admin@farminspector.supplychain.com'\n        const identity = X509WalletMixin.createIdentity('FarmInspectorMSP', cert, key)\n        if (!(await wallet.exists(identityLabel))) {\n            await wallet.import(identityLabel, identity);\n            console.log(\"Identity created and imported to wallet\")\n        } else {\n            console.log(\"Identity creation skipped as the identity already exists in the wallet\")\n        }\n\n    } catch (error) {\n        console.log(`Error adding to wallet. ${error}`);\n        console.log(error.stack);\n    }\n}"]}]}